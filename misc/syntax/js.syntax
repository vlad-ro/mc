#
# JavaScript syntax highlighting
# for MC Editor/CoolEdit
#
# Author: Vlad Romanenko <VladRomanenko@ukr.net>
# Based on c.syntax
#
# TODO:
# Highlight JS regexpressions /../
# More built-in functions
#
# 2002-09-17  Vlad Romanenko <VladRomanenko@ukr.net>
#    * More C and Java consistency by Pavel Roskin <proski@gnu.org>.
#    * Advanced number highlighting.
#
# 2002-09-16  Vlad Romanenko <VladRomanenko@ukr.net>
#    * Initial public release.
#

context default yellow

    #=========================
    # Keywords
    keyword whole arguments white
    keyword whole break white
    keyword whole caller white
    keyword whole case white
    keyword whole catch white
    keyword whole class white
    keyword whole const white
    keyword whole constructor white
    keyword whole continue white
    keyword whole else white
    keyword whole extends white
    keyword whole export white
    keyword whole default white
    keyword whole delete white
    keyword whole for white
    keyword whole function white
    keyword whole if white
    keyword whole import white
    keyword whole in white
    keyword whole instanceof white
    keyword whole let white
    keyword whole new white
    keyword whole of white
    keyword whole prototype white
    keyword whole return white
    keyword whole switch white
    keyword whole this white
    keyword whole throw white
    keyword whole try white
    keyword whole typeof white
    keyword whole var white
    keyword whole while white
    keyword whole with white
    keyword whole yield white

    #=========================
    # Objects
    keyword whole ActiveXObject white
    keyword whole Array white
    keyword whole Boolean white
    keyword whole Date white
    keyword whole Dictionary white
    keyword whole Enumerator white
    keyword whole FileSystemObject white
    keyword whole Function white
    keyword whole Global white
    keyword whole Image white
    keyword whole Math white
    keyword whole Map white
    keyword whole Number white
    keyword whole Object white
    keyword whole Promise white
    keyword whole Proxy white
    keyword whole Reflect white
    keyword whole Set white
    keyword whole Symbol white
    keyword whole TextStream white
    keyword whole RegExp white
    keyword whole VBArray white
    keyword whole WeakMap white
    keyword whole WeakSet white

    #=========================
    # Most common functions
    keyword whole alert white
    keyword whole escape white
    keyword whole eval white
    keyword whole indexOf white
    keyword whole isNaN white
    keyword whole toString white
    keyword whole unescape white
    keyword whole valueOf white

    #=========================
    # Constants
    keyword whole false brightgreen
    keyword whole null brightgreen
    keyword whole true brightgreen
    keyword whole undefined white

    #=========================
    # Comments
    keyword /\* lightgray
    keyword \*/ lightgray
    keyword // lightgray

    #=========================
    # Numbers
    wholechars abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.

    keyword whole 0\{xX\}\{0123456789abcdefABCDEF\}\[0123456789abcdefABCDEF\] brightgreen
    keyword whole \{0123456789\}\[0123456789\] brightgreen
    keyword whole \[0123456789\]\.\{0123456789\}\[0123456789\] brightgreen
    keyword whole \{0123456789\}\[0123456789\]\.\[0123456789\] brightgreen
    keyword whole \{0123456789\}\[0123456789\]\{eE\}\{0123456789\}\[0123456789\] brightgreen
    keyword whole \{0123456789\}\[0123456789\]\{eE\}\{\-\+\}\{0123456789\}\[0123456789\] brightgreen
    keyword whole \{0123456789\}\[0123456789\]\.\{0123456789\}\[0123456789\]\{eE\}\{0123456789\}\[0123456789\] brightgreen
    keyword whole \{0123456789\}\[0123456789\]\.\{0123456789\}\[0123456789\]\{eE\}\{\-\+\}\{0123456789\}\[0123456789\] brightgreen

    #=========================
    # Special symbols
    keyword => white
    keyword \. white
    keyword \* white
    keyword \+ white
    keyword - white
    keyword / white
    keyword % white
    keyword = white
    keyword ! white
    keyword & white
    keyword | white
    keyword ^ white
    keyword ~ white
    keyword > white
    keyword < white

    #=========================
    # Separators
    keyword { white
    keyword } white
    keyword ( white
    keyword ) white
    keyword [ white
    keyword ] white
    keyword , white
    keyword ? white
    keyword : white
    keyword ; brightmagenta


#=============================
# Comments

context exclusive /\* \*/ lightgray
    spellcheck
    keyword whole BUG brightred
    keyword whole FixMe brightred
    keyword whole FIXME brightred
    keyword whole Note brightred
    keyword whole NOTE brightred
    keyword whole ToDo brightred
    keyword whole TODO brightred
    keyword !!\[!\] brightred
    keyword ??\[?\] brightred


context exclusive // \n lightgray
    spellcheck
    keyword whole BUG brightred
    keyword whole FixMe brightred
    keyword whole FIXME brightred
    keyword whole Note brightred
    keyword whole NOTE brightred
    keyword whole ToDo brightred
    keyword whole TODO brightred
    keyword !!\[!\] brightred
    keyword ??\[?\] brightred

#=============================
# Strings

context " " brightcyan
    spellcheck
    keyword \\\{\\'"abtnvfr\} brightgreen
    keyword \\\{0123\}\{01234567\}\{01234567\} brightgreen

    keyword ' brightgreen

context ' ' brightcyan
    spellcheck
    keyword \\\{\\'"abtnvfr\} brightgreen
    keyword \\\{0123\}\{01234567\}\{01234567\} brightgreen

    keyword " brightgreen

context ` ` brightcyan
    spellcheck
    keyword \\\{\\'"abtnvfr\} brightgreen
    keyword \\\{0123\}\{01234567\}\{01234567\} brightgreen
    keyword ${*} yellow

#=============================
# Regular expressions

context exclusive / / brightcyan
    keyword \\\\ brightgreen
    keyword \\\? brightgreen
    keyword \\\[/sSw\+\$\!\] brightgreen
    keyword (?: white
    keyword ( white
    keyword ) white
    keyword [ white
    keyword ] white
    keyword { white
    keyword } white
    keyword \. white
    keyword \* white
    keyword \+ white
    keyword ? white
    keyword | white
